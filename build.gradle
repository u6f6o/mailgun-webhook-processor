plugins {
    id 'io.quarkus'
    id 'org.jetbrains.kotlin.jvm' version "1.7.20"
    id 'org.jetbrains.kotlin.plugin.allopen' version "1.7.20"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.20'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("io.quarkus:quarkus-bom:${quarkusVersion}")
    implementation enforcedPlatform("io.quarkus.platform:quarkus-amazon-services-bom:${quarkusVersion}")

    implementation 'io.quarkus:quarkus-amazon-lambda'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy-reactive-kotlin-serialization-common'

    implementation 'io.quarkiverse.loggingjson:quarkus-logging-json:2.0.0'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json'

    implementation 'commons-codec:commons-codec'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:5.5.1'
    testImplementation 'io.kotest:kotest-assertions-json:5.5.1'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'mycompany'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}
